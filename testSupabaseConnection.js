// testSupabaseConnection.js
// Script de test d√©taill√© de la connexion Supabase

(async function() {
    const output = document.getElementById('testOutput');
    function log(msg) {
        output.innerHTML += `<div>${msg}</div>`;
    }

    log('üîç Test de connexion Supabase d√©marr√©...');

    // √âtape 1 : V√©rification de la config
    if (!window.PRIVATE_CONFIG) {
        log('‚ùå ERREUR : window.PRIVATE_CONFIG est introuvable.');
        return;
    }
    log('‚úÖ window.PRIVATE_CONFIG trouv√©.');

    if (!window.PRIVATE_CONFIG.supabaseUrl || !window.PRIVATE_CONFIG.supabaseAnonKey) {
        log('‚ùå ERREUR : Les cl√©s Supabase sont manquantes dans la configuration.');
        return;
    }
    log('‚úÖ Cl√©s Supabase pr√©sentes.');

    // √âtape 2 : Chargement de la librairie supabase-js
    try {
        if (!window.supabaseLib) {
            window.supabaseLib = await import('https://cdn.skypack.dev/@supabase/supabase-js@2');
            log('‚úÖ Librairie supabase-js charg√©e.');
        } else {
            log('‚ÑπÔ∏è Librairie supabase-js d√©j√† charg√©e.');
        }
    } catch (e) {
        log('‚ùå ERREUR : Impossible de charger la librairie supabase-js.');
        log(e.message);
        return;
    }

    // √âtape 3 : Cr√©ation du client
    let supabase;
    try {
        const { createClient } = window.supabaseLib;
        supabase = createClient(window.PRIVATE_CONFIG.supabaseUrl, window.PRIVATE_CONFIG.supabaseAnonKey);
        log('‚úÖ Client Supabase cr√©√©.');
    } catch (e) {
        log('‚ùå ERREUR : Impossible de cr√©er le client Supabase.');
        log(e.message);
        return;
    }

    // √âtape 4 : Test de requ√™te
    try {
        log('‚è≥ Test de requ√™te sur la table "moods"...');
        const { data, error } = await supabase.from('moods').select('*').limit(1);
        if (error) {
            log('‚ùå ERREUR lors de la requ√™te : ' + error.message);
            return;
        }
        log('‚úÖ Requ√™te r√©ussie. Exemple de donn√©es :');
        log('<pre>' + JSON.stringify(data, null, 2) + '</pre>');
    } catch (e) {
        log('‚ùå ERREUR inattendue lors de la requ√™te.');
        log(e.message);
    }
})();
